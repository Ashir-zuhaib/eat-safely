<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>new password</title>
    <style>
      *,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Open Sans', Helvetica, Arial, sans-serif;
    background: #ffffff;
   
}
.sub-cont p {
    text-align: center;
    color: #fff;
    position: relative;
    z-index: 3; /* Adjust the z-index as needed */
}

input,
button {
    border: none;
    outline: none;
    background: none;
    font-family: 'Open Sans', Helvetica, Arial, sans-serif;
}

.tip {
    font-size: 20px;
    margin: 40px auto 50px;
    text-align: center;
}

.cont {
    margin: 30px  245px;
    border-radius: 20px;
    overflow: hidden;
    position: relative;
    width: 900px;
    height: 550px;
    background: #fff;
    box-shadow: -10px -10px 15px rgba(255, 255, 255, 0.3), 10px 10px 15px rgba(70, 70, 70, 0.15), inset -10px -10px 15px rgba(255, 255, 255, 0.3), inset 10px 10px 15px rgba(70, 70, 70, 0.15);
}

.form {
    position: relative;
    width: 640px;
    height: 100%;
    -webkit-transition: -webkit-transform 1.2s ease-in-out;
    transition: -webkit-transform 1.2s ease-in-out;
    transition: transform 1.2s ease-in-out;
    transition: transform 1.2s ease-in-out, -webkit-transform 1.2s ease-in-out;
    padding: 50px 30px 0;
}

.sub-cont {
    overflow: hidden;
    position: absolute;
    left: 640px;
    top: 0;
    width: 900px;
    height: 100%;
    padding-left: 260px;
    background: #fff;
    -webkit-transition: -webkit-transform 1.2s ease-in-out;
    transition: -webkit-transform 1.2s ease-in-out;
    transition: transform 1.2s ease-in-out;
    transition: transform 1.2s ease-in-out, -webkit-transform 1.2s ease-in-out;
}


button {
    display: block;
    margin: 0 auto;
    width: 260px;
    height: 36px;
    border-radius: 30px;
    color: #fff;
    font-size: 15px;
    cursor: pointer;
}

.img {
    overflow: hidden;
    z-index: 2;
    position: absolute;
    left: 0;
    top: 0;
    width: 260px;
    height: 100%;
    padding-top: 360px;
}



.img:after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: #FFBF00;
}


.img__text {
    z-index: 2;
    position: absolute;
    left: 0;
    top: 50px;
    width: 100%;
    padding: 0 20px;
    text-align: center;
    color: #fff;
    -webkit-transition: -webkit-transform 1.2s ease-in-out;
    transition: -webkit-transform 1.2s ease-in-out;
    transition: transform 1.2s ease-in-out;
    transition: transform 1.2s ease-in-out, -webkit-transform 1.2s ease-in-out;
}

.img__text h2 {
    margin-bottom: 10px;
    font-weight: normal;
}

.img__text p {
    font-size: 14px;
    line-height: 1.5;
}


.img__btn {
    z-index: 2;
    position: relative;
    width: 130px;
    height: 40px;
    margin: 0 auto;
    background: transparent;
    color: #fff;
    text-transform: uppercase;
    font-size: 10px;
    cursor: pointer;
    display: flex;
 
}

.img__btn:after {
    content: '';
    z-index: 2;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border: 2px solid #fff;
    border-radius: 30px;
}

h2 {
    width: 100%;
    font-size: 26px;
    text-align: center;
}

label {
    display: block;
    width: 260px;
    margin: 25px auto 0;
    text-align: left;
}

label span {
    font-size: 12px;
    color: #cfcfcf;
    text-transform: uppercase;
    
}

input {
    display: block;
    width: 100%;
    margin-top: 5px;
    padding-bottom: 5px;
    font-size: 16px;
    border-bottom: 1px solid rgba(0, 0, 0, 0.4);
    text-align: center;
}

.forgot-pass {
    margin-top: 15px;
    text-align: center;
    font-size: 12px;
    color: #cfcfcf;
}

.submit {
    margin-top: 40px;
    margin-bottom: 20px;
    background: #FFBF00;
    text-transform: uppercase;
}

.fb-btn {
    border: 2px solid #d3dae9;
    color: #8fa1c7;
}

.fb-btn span {
    font-weight: bold;
    color: #455a81;
}
.sign-in {
    -webkit-transition-timing-function: ease-out;
    transition-timing-function: ease-out;
}
p{
    text-align: center;
}
    </style>
    <!-- <link rel="stylesheet" type="text/css" href="/public/views/style.css"> -->
    <script src="script.js"></script>
</head>
<body>
        <div class="cont">
            <div class="form new-password">
                <h2>Password Change</h2>
                <br>
               
        <form id="passwordForm" onsubmit="checnge(event)">
        <label>
        <span>New Password</span>
        <input type="password" id="newPassword" name="newPassword" required> </label>
        
        <br>
        <label>
        <span>Confirm Password</span>
        <input type="password" id="confirmPassword" name="confirmPassword" required> </label>

        <p id="errorText" class="error"></p>

        <button type="submit" class="submit" > Change Password </button>
    </form>  
    </div>


    <div class="sub-cont">
        <div class="img">
            <div class="img__text m--new">
                <img src="https://firebasestorage.googleapis.com/v0/b/calender-app-404121.appspot.com/o/eat.png?alt=media&token=e6d873d4-fc74-413f-b25c-8e14147f37aa" height="100%" width="100%">  
                <h3>Back To Sign In Page Again!<h3>
            </div>

            <div class="img__btn">
                <button onclick="redirectToSignIn()" class="m--new">SIGN NOW</button>
            </div>
        </div>
<script>
  function redirectToSignIn() {
    // Replace the URL with the actual URL of your sign-in page
    window.location.href = "/";
}
     async function checnge(event) {
      event.preventDefault()
                //   const email = document.getElementById("se").value;
                  // const password = document.getElementById("sp").value;
                  const password = document.getElementById("newPassword").value;

              
                // Get the current URL
var currentUrl = window.location.href;

// Use URLSearchParams to extract the parameter value
var urlParams = new URLSearchParams(currentUrl.split('?')[1]);
var hashesId = urlParams.get('hashesId');

// Log or use the extracted hashesId
console.log('hashesId:', hashesId);
      const userData = {
        password,hashesId
      }
              
      try {
  const response = await fetch("https://eat-safely-theta.vercel.app/users/resetPassword", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(userData),
  });

  if (response.ok) {
    const data =await response.json()
    console.log(data);
    // Check if the response indicates a redirect
      // Redirect manually to the specified location
      window.location.href = data.data;
      // Login successful, handle the response as needed
      // console.log(data);
  } else {
    // Handle login error
    const errorData = await response.json();
    console.error(errorData);
  }
} catch (error) {
  console.error(error);
}

                }

</script>
</body>
</html>